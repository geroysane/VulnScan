#include "VulnerabilityWorker.h"
#include "VulnerabilityScanner.h"

VulnerabilityWorker::VulnerabilityWorker(VulnerabilityScanner* scanner,
                                         const QString& host,
                                         int port,
                                         const QString& serviceName,
                                         const QString& version)
    : m_scanner(scanner)
    , m_host(host)
    , m_port(port)
    , m_serviceName(serviceName)
    , m_version(version)
{
    // Worker will be automatically deleted after run() completes
    setAutoDelete(true);
}

void VulnerabilityWorker::run()
{
    if (!m_scanner) {
        return;
    }

    // Create result structure
    VulnerabilityResult result;
    result.host = m_host;
    result.port = m_port;
    result.serviceName = m_serviceName;
    result.version = m_version;

    // Use matcher to find vulnerabilities
    QVector<CveEntry> vulnerabilities = m_scanner->m_matcher.findVulnerabilities(
        m_serviceName,
        m_version
    );

    result.vulnerabilities = vulnerabilities;
    result.vulnerabilityCount = vulnerabilities.size();

    // Report result back to scanner
    m_scanner->addResult(result);
    m_scanner->reportProgress();
}
