#ifndef VULNERABILITYWORKER_H
#define VULNERABILITYWORKER_H

#include <QRunnable>
#include <QString>

// Forward declarations
class VulnerabilityScanner;

/**
 * @class VulnerabilityWorker
 * @brief Worker thread for assessing vulnerabilities of a single service
 *
 * Implements QRunnable for execution in QThreadPool. Each worker
 * assesses one detected service and reports results back to the
 * VulnerabilityScanner.
 *
 * @note Workers are automatically deleted after execution (setAutoDelete(true))
 */
class VulnerabilityWorker : public QRunnable {
public:
    /**
     * @brief Constructor
     * @param scanner Pointer to parent VulnerabilityScanner
     * @param host Target host address
     * @param port Service port number
     * @param serviceName Detected service name
     * @param version Detected service version (may be empty)
     */
    VulnerabilityWorker(VulnerabilityScanner* scanner,
                        const QString& host,
                        int port,
                        const QString& serviceName,
                        const QString& version);

    /**
     * @brief Execute vulnerability assessment
     *
     * Queries CVE database for matching vulnerabilities and reports
     * results back to parent scanner.
     */
    void run() override;

private:
    VulnerabilityScanner* m_scanner;  ///< Parent scanner
    QString m_host;                   ///< Target host
    int m_port;                       ///< Service port
    QString m_serviceName;            ///< Service name
    QString m_version;                ///< Service version
};

#endif // VULNERABILITYWORKER_H
