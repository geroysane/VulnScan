#ifndef CVESEEDER_H
#define CVESEEDER_H

#include <QString>
#include <QList>
#include <QJsonObject>
#include "VulnerabilityDatabase.h"

/**
 * @class CveSeeder
 * @brief Utility for seeding CVE database with sample or real data
 *
 * Provides methods to populate the vulnerability database with
 * CVE entries from various sources:
 * - Hardcoded sample data for testing
 * - JSON files (NVD format or custom format)
 * - CSV files
 */
class CveSeeder
{
public:
    /**
     * @brief Constructor
     */
    CveSeeder();

    /**
     * @brief Destructor
     */
    ~CveSeeder();

    /**
     * @brief Seed database with sample CVE data
     * @param db Vulnerability database to populate
     * @return Number of CVEs inserted
     */
    int seedWithSampleData(VulnerabilityDatabase* db);

    /**
     * @brief Seed database from JSON file
     * @param db Vulnerability database to populate
     * @param jsonFilePath Path to JSON file
     * @return Number of CVEs inserted
     */
    int seedFromJsonFile(VulnerabilityDatabase* db, const QString& jsonFilePath);

    /**
     * @brief Seed database from CSV file
     * @param db Vulnerability database to populate
     * @param csvFilePath Path to CSV file
     * @return Number of CVEs inserted
     */
    int seedFromCsvFile(VulnerabilityDatabase* db, const QString& csvFilePath);

    /**
     * @brief Get sample CVE data for testing
     * @return List of sample CVE entries
     */
    static QList<CveEntry> getSampleCveData();

private:
    /**
     * @brief Insert CVE entry into database
     * @param db Vulnerability database
     * @param entry CVE entry to insert
     * @return true if insertion successful
     */
    bool insertCveEntry(VulnerabilityDatabase* db, const CveEntry& entry);

    /**
     * @brief Parse JSON CVE entry
     * @param jsonObj JSON object containing CVE data
     * @return Parsed CVE entry
     */
    CveEntry parseJsonCve(const QJsonObject& jsonObj) const;

    /**
     * @brief Parse CSV line to CVE entry
     * @param csvLine CSV line string
     * @return Parsed CVE entry
     */
    CveEntry parseCsvLine(const QString& csvLine) const;
};

#endif // CVESEEDER_H
